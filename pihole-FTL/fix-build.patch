diff --git a/src/CMakeLists.txt b/src/CMakeLists.txt
index a6fb1af5..d9a3533a 100644
--- a/src/CMakeLists.txt
+++ b/src/CMakeLists.txt
@@ -192,10 +192,10 @@ set(THREADS_PREFER_PTHREAD_FLAG TRUE)
 find_package(Threads REQUIRED)
 
 # for DNSSEC we need the nettle (+ hogweed) crypto and the gmp math libraries
-find_library(LIBHOGWEED libhogweed${CMAKE_STATIC_LIBRARY_SUFFIX})
-find_library(LIBGMP libgmp${CMAKE_STATIC_LIBRARY_SUFFIX})
-find_library(LIBNETTLE libnettle${CMAKE_STATIC_LIBRARY_SUFFIX})
-find_library(LIBIDN libidn${CMAKE_STATIC_LIBRARY_SUFFIX})
+find_library(LIBHOGWEED hogweed)
+find_library(LIBGMP gmp)
+find_library(LIBNETTLE nettle)
+find_library(LIBIDN idn)
 
 target_link_libraries(pihole-FTL rt Threads::Threads ${LIBHOGWEED} ${LIBGMP} ${LIBNETTLE} ${LIBIDN})
 
@@ -204,9 +204,9 @@ if(LUA_DL STREQUAL "true")
     target_link_libraries(pihole-FTL ${LIBDL})
 endif()
 
-find_library(LIBREADLINE libreadline${CMAKE_STATIC_LIBRARY_SUFFIX})
-find_library(LIBHISTORY libhistory${CMAKE_STATIC_LIBRARY_SUFFIX})
-find_library(LIBTERMCAP libtermcap${CMAKE_STATIC_LIBRARY_SUFFIX})
+find_library(LIBREADLINE readline)
+find_library(LIBHISTORY history)
+find_library(LIBTERMCAP termcap)
 if(LIBREADLINE AND LIBHISTORY AND LIBTERMCAP)
     message(STATUS "Building FTL with readline support: YES")
     target_compile_definitions(FTL PRIVATE LUA_USE_READLINE)
